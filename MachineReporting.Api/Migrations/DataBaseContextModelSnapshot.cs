// <auto-generated />
using System;
using MachineReporting.Api.Models.DataBaseContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MachineReporting.Api.Migrations
{
    [DbContext(typeof(DataBaseContext))]
    partial class DataBaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.20");

            modelBuilder.Entity("MachineReporting.Api.Models.Entities.Codes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsFirstCode")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TransactionsId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("TransactionsId");

                    b.ToTable("Codes");
                });

            modelBuilder.Entity("MachineReporting.Api.Models.Entities.Transactions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Amount")
                        .HasColumnType("TEXT");

                    b.Property<string>("Decription")
                        .HasColumnType("TEXT");

                    b.Property<string>("PromoCode")
                        .HasColumnType("TEXT");

                    b.Property<string>("ReceiptNo")
                        .HasColumnType("TEXT");

                    b.Property<long>("Reciver")
                        .HasColumnType("INTEGER");

                    b.Property<long>("Sender")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SenderFullName")
                        .HasColumnType("TEXT");

                    b.Property<int>("SenderUserType")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SpecId")
                        .HasColumnType("TEXT");

                    b.Property<string>("TraceCode")
                        .HasColumnType("TEXT");

                    b.Property<int?>("UsersId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UsersId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("MachineReporting.Api.Models.Entities.Users", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Age")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Balance")
                        .HasColumnType("TEXT");

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ClientSecret")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("userType")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("MachineReporting.Api.Models.Entities.Codes", b =>
                {
                    b.HasOne("MachineReporting.Api.Models.Entities.Transactions", "Transactions")
                        .WithMany("Codes")
                        .HasForeignKey("TransactionsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("MachineReporting.Api.Models.Entities.Transactions", b =>
                {
                    b.HasOne("MachineReporting.Api.Models.Entities.Users", null)
                        .WithMany("Transactions")
                        .HasForeignKey("UsersId");
                });

            modelBuilder.Entity("MachineReporting.Api.Models.Entities.Transactions", b =>
                {
                    b.Navigation("Codes");
                });

            modelBuilder.Entity("MachineReporting.Api.Models.Entities.Users", b =>
                {
                    b.Navigation("Transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
